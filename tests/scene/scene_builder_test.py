from pytest_mock import MockFixture

import dearpygui.dearpygui as dpg

from agents_playground.core.counter import Counter
from agents_playground.renderers.color import Colors
from agents_playground.scene.scene import Scene
from agents_playground.scene.scene_builder import SceneBuilder
from types import SimpleNamespace

class TestSceneBuilder:
  dpg.create_context()

  def test_establish_cell_size(self, mocker: MockFixture) -> None:
    sb = SceneBuilder(id_generator=mocker.Mock(), task_scheduler=mocker.Mock())
    cell_size = [14,13]
    scene_data = SimpleNamespace(scene=SimpleNamespace(cell_size=cell_size))
    scene = sb.build(scene_data)
    assert scene.cell_size.width == cell_size[0]
    assert scene.cell_size.height == cell_size[1]

  def test_build_agents(self, mocker: MockFixture) -> None:
  
    spy_id_generator = mocker.spy(dpg, 'generate_uuid')
    sb = SceneBuilder(id_generator=spy_id_generator, task_scheduler=mocker.Mock())
    agents = [
      SimpleNamespace(id = 7, crest = 'aqua'),
      SimpleNamespace(id = 8, crest = 'magenta'),
      SimpleNamespace(id = 9, crest ='green', location = [36,18])
    ]
    scene_data = SimpleNamespace(scene=SimpleNamespace(cell_size=[1,2], agents=agents))
    
    scene = sb.build(scene_data)

    assert len(scene.agents) == 3

    # Each agent requires two generated IDs (Agent.id, Agent.render_id). 
    assert spy_id_generator.call_count == 6

    # The Generated ID is used for organizing the agents.
    # The ID specified in the TOML file is stored as Agent.toml_id
    # We use the IdMap class to map between the IDs specified in the file
    # and the ones generated by dpg.
    agent_a_id = sb._id_map.lookup_agent_by_toml(7)
    agent_c_id = sb._id_map.lookup_agent_by_toml(9)
    
    assert scene.agents[agent_a_id].id == agent_a_id
    assert scene.agents[agent_a_id].render_id == agent_a_id + 1
    assert scene.agents[agent_a_id].toml_id == 7
    assert scene.agents[agent_a_id].crest == Colors['aqua'].value

    assert scene.agents[agent_c_id].toml_id == 9
    assert scene.agents[agent_c_id].location.x == 36
    assert scene.agents[agent_c_id].location.y == 18
    
    