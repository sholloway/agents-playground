[simulation.ui]
title = 'Line of Sight'
description = 'A line of sight demonstration.'
instructions = 'Click the start button to begin the simulation.'

[scene]
cell_size = [20, 20]
height = 1300 # In pixels.

layers = [
  { label = 'Grid',                 renderer = 'render_grid_layer',           show = false},
  { label = 'Paths',                renderer = 'render_paths_layer',          show = true},
  { label = 'Entities',             renderer = 'render_entities_layer',       show = true},
  { label = 'Agents',               renderer = 'render_agents_layer',         show = true},
  { label = "Agent's AABB",         renderer = 'render_agents_aabb_layer',    show = false },
  { label = "Agent's View Frustum", renderer = 'render_agents_view_frustum',  show = false },
]

agents = [
  { id = 1, crest='green', location=[36,18]},   # The central agent.

  { id = 2,  crest='blue',  location=[36,0]},   # 12 o'clock
  { id = 3,  crest='blue',  location=[44,10]},  
  { id = 4,  crest='blue',  location=[50,15]},  
  { id = 5,  crest='blue',  location=[54,18]},  # 3 o'clock
  { id = 6,  crest='blue',  location=[50,21]},  
  { id = 7,  crest='blue',  location=[44,26]},  
  { id = 8,  crest='blue',  location=[36,36]},  # 6 o'clock
  { id = 9,  crest='blue',  location=[28,26]},  
  { id = 10, crest='blue',  location=[22,21]},  
  { id = 11, crest='blue',  location=[18,18]},  # 9 o'clock
  { id = 12, crest='blue',  location=[22,15]},  # 10 o'clock
  { id = 13, crest='blue',  location=[32,10]},  # 11 o'clock
]

# Schedule tasks to be run in the simulation
# In this sim, the agent in the center is rotating clockwise.
schedule = [
  { coroutine = 'agent_navigation', agent_id = 1, speed = 1, state = 'IDLE_STATE'},
]

# Declare the agents states.
# If state-type isn't specified, the scene builder uses NamedAgentState(name).
agent_states = [
  { name = 'IDLE_STATE'},
  { name = 'SPINNING_CW'},
]

# Map default states to transition maps.
# if there is no scene.default_agent_states then the engine will use the 
# first agent_states item declared as the default state for each agent_state_transition_map.
default_agent_states = [
  { agent_state_transition_map = 'default_agent_state_map', default_state='IDLE_STATE' }
] 

# Declare the the state transition table. 
[agent_state_transition_maps] 
default_agent_state_map = [
  { state = 'IDLE_STATE',  transitions_to = 'SPINNING_CW'},
  { state = 'SPINNING_CW', transitions_to = 'SPINNING_CW'}
]


# Display what the central agent can "see".
[scene.entities]
state_displays = [
  { id = 1, title = "Agent Sees",  location = [10, 20], width = 40, height = 5, color = [0, 0, 0], fill = [221, 160, 221], renderer = 'text_display', update_method = 'agent_state_display_refresh', related = 'agent', related_id = 1},  
]

